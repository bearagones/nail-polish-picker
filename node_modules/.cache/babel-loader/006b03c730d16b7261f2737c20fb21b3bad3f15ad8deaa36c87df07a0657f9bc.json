{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Beatrice\\\\Documents\\\\GitHub\\\\nail-polish-picker\\\\src\\\\context\\\\ModalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalContext = /*#__PURE__*/createContext();\nexport const useModal = () => {\n  _s();\n  const context = useContext(ModalContext);\n  if (!context) {\n    throw new Error('useModal must be used within a ModalProvider');\n  }\n  return context;\n};\n_s(useModal, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ModalProvider = ({\n  children\n}) => {\n  _s2();\n  const [modal, setModal] = useState({\n    isOpen: false,\n    type: 'info',\n    title: '',\n    message: '',\n    onConfirm: null,\n    onCancel: null\n  });\n  const showModal = (type, title, message, onConfirm = null, onCancel = null) => {\n    setModal({\n      isOpen: true,\n      type,\n      title,\n      message,\n      onConfirm,\n      onCancel\n    });\n  };\n  const hideModal = () => {\n    setModal(prev => ({\n      ...prev,\n      isOpen: false\n    }));\n  };\n  const success = (message, title = 'Success') => {\n    return new Promise(resolve => {\n      showModal('success', title, message, () => {\n        hideModal();\n        resolve(true);\n      });\n    });\n  };\n  const error = (message, title = 'Error') => {\n    return new Promise(resolve => {\n      showModal('error', title, message, () => {\n        hideModal();\n        resolve(true);\n      });\n    });\n  };\n  const warning = (message, title = 'Warning') => {\n    return new Promise(resolve => {\n      showModal('warning', title, message, () => {\n        hideModal();\n        resolve(true);\n      });\n    });\n  };\n  const info = (message, title = 'Information') => {\n    return new Promise(resolve => {\n      showModal('info', title, message, () => {\n        hideModal();\n        resolve(true);\n      });\n    });\n  };\n  const confirm = (message, title = 'Confirm') => {\n    return new Promise(resolve => {\n      showModal('confirm', title, message, () => {\n        hideModal();\n        resolve(true);\n      }, () => {\n        hideModal();\n        resolve(false);\n      });\n    });\n  };\n  const value = {\n    modal,\n    showModal,\n    hideModal,\n    success,\n    error,\n    warning,\n    info,\n    confirm\n  };\n  return /*#__PURE__*/_jsxDEV(ModalContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n};\n_s2(ModalProvider, \"ZZgc4w6Asa7IRwgZnkfrPKNC9nk=\");\n_c = ModalProvider;\nvar _c;\n$RefreshReg$(_c, \"ModalProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","ModalContext","useModal","_s","context","Error","ModalProvider","children","_s2","modal","setModal","isOpen","type","title","message","onConfirm","onCancel","showModal","hideModal","prev","success","Promise","resolve","error","warning","info","confirm","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Beatrice/Documents/GitHub/nail-polish-picker/src/context/ModalContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\n\r\nconst ModalContext = createContext();\r\n\r\nexport const useModal = () => {\r\n  const context = useContext(ModalContext);\r\n  if (!context) {\r\n    throw new Error('useModal must be used within a ModalProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ModalProvider = ({ children }) => {\r\n  const [modal, setModal] = useState({\r\n    isOpen: false,\r\n    type: 'info',\r\n    title: '',\r\n    message: '',\r\n    onConfirm: null,\r\n    onCancel: null\r\n  });\r\n\r\n  const showModal = (type, title, message, onConfirm = null, onCancel = null) => {\r\n    setModal({\r\n      isOpen: true,\r\n      type,\r\n      title,\r\n      message,\r\n      onConfirm,\r\n      onCancel\r\n    });\r\n  };\r\n\r\n  const hideModal = () => {\r\n    setModal(prev => ({ ...prev, isOpen: false }));\r\n  };\r\n\r\n  const success = (message, title = 'Success') => {\r\n    return new Promise((resolve) => {\r\n      showModal('success', title, message, () => {\r\n        hideModal();\r\n        resolve(true);\r\n      });\r\n    });\r\n  };\r\n\r\n  const error = (message, title = 'Error') => {\r\n    return new Promise((resolve) => {\r\n      showModal('error', title, message, () => {\r\n        hideModal();\r\n        resolve(true);\r\n      });\r\n    });\r\n  };\r\n\r\n  const warning = (message, title = 'Warning') => {\r\n    return new Promise((resolve) => {\r\n      showModal('warning', title, message, () => {\r\n        hideModal();\r\n        resolve(true);\r\n      });\r\n    });\r\n  };\r\n\r\n  const info = (message, title = 'Information') => {\r\n    return new Promise((resolve) => {\r\n      showModal('info', title, message, () => {\r\n        hideModal();\r\n        resolve(true);\r\n      });\r\n    });\r\n  };\r\n\r\n  const confirm = (message, title = 'Confirm') => {\r\n    return new Promise((resolve) => {\r\n      showModal('confirm', title, message, \r\n        () => {\r\n          hideModal();\r\n          resolve(true);\r\n        },\r\n        () => {\r\n          hideModal();\r\n          resolve(false);\r\n        }\r\n      );\r\n    });\r\n  };\r\n\r\n  const value = {\r\n    modal,\r\n    showModal,\r\n    hideModal,\r\n    success,\r\n    error,\r\n    warning,\r\n    info,\r\n    confirm\r\n  };\r\n\r\n  return <ModalContext.Provider value={value}>{children}</ModalContext.Provider>;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}