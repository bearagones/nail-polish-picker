{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Beatrice\\\\Documents\\\\GitHub\\\\nail-polish-picker\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { onAuthStateChange, signOutUser, getUserData } from '../firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case 'RESTORE_SESSION':\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: !!action.payload,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Listen to Firebase auth state changes\n  useEffect(() => {\n    const unsubscribe = onAuthStateChange(async firebaseUser => {\n      if (firebaseUser) {\n        try {\n          // Get additional user data from Firestore\n          const userData = await getUserData(firebaseUser.uid);\n          const user = {\n            uid: firebaseUser.uid,\n            email: firebaseUser.email,\n            displayName: firebaseUser.displayName || userData.displayName,\n            ...userData\n          };\n          dispatch({\n            type: 'RESTORE_SESSION',\n            payload: user\n          });\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n          // If we can't get Firestore data, use basic Firebase user info\n          const user = {\n            uid: firebaseUser.uid,\n            email: firebaseUser.email,\n            displayName: firebaseUser.displayName,\n            polishCollection: [],\n            topperCollection: [],\n            recentCombinations: []\n          };\n          dispatch({\n            type: 'RESTORE_SESSION',\n            payload: user\n          });\n        }\n      } else {\n        dispatch({\n          type: 'RESTORE_SESSION',\n          payload: null\n        });\n      }\n    });\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, []);\n  const login = userData => {\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    });\n  };\n  const logout = async () => {\n    try {\n      await signOutUser();\n      dispatch({\n        type: 'LOGOUT'\n      });\n    } catch (error) {\n      console.error('Error signing out:', error);\n      // Force logout even if Firebase signout fails\n      dispatch({\n        type: 'LOGOUT'\n      });\n    }\n  };\n  const updateUser = updatedUserData => {\n    const newUserData = {\n      ...state.user,\n      ...updatedUserData\n    };\n    dispatch({\n      type: 'LOGIN',\n      payload: newUserData\n    });\n  };\n  const value = {\n    ...state,\n    login,\n    logout,\n    updateUser,\n    dispatch\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","onAuthStateChange","signOutUser","getUserData","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","user","payload","isAuthenticated","isLoading","initialState","AuthProvider","children","_s","dispatch","unsubscribe","firebaseUser","userData","uid","email","displayName","error","console","polishCollection","topperCollection","recentCombinations","login","logout","updateUser","updatedUserData","newUserData","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/Beatrice/Documents/GitHub/nail-polish-picker/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { onAuthStateChange, signOutUser, getUserData } from '../firebase/auth';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false\r\n      };\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload\r\n      };\r\n    case 'RESTORE_SESSION':\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: !!action.payload,\r\n        isLoading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n  isLoading: true\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Listen to Firebase auth state changes\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChange(async (firebaseUser) => {\r\n      if (firebaseUser) {\r\n        try {\r\n          // Get additional user data from Firestore\r\n          const userData = await getUserData(firebaseUser.uid);\r\n          const user = {\r\n            uid: firebaseUser.uid,\r\n            email: firebaseUser.email,\r\n            displayName: firebaseUser.displayName || userData.displayName,\r\n            ...userData\r\n          };\r\n          dispatch({ type: 'RESTORE_SESSION', payload: user });\r\n        } catch (error) {\r\n          console.error('Error fetching user data:', error);\r\n          // If we can't get Firestore data, use basic Firebase user info\r\n          const user = {\r\n            uid: firebaseUser.uid,\r\n            email: firebaseUser.email,\r\n            displayName: firebaseUser.displayName,\r\n            polishCollection: [],\r\n            topperCollection: [],\r\n            recentCombinations: []\r\n          };\r\n          dispatch({ type: 'RESTORE_SESSION', payload: user });\r\n        }\r\n      } else {\r\n        dispatch({ type: 'RESTORE_SESSION', payload: null });\r\n      }\r\n    });\r\n\r\n    // Cleanup subscription on unmount\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const login = (userData) => {\r\n    dispatch({ type: 'LOGIN', payload: userData });\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await signOutUser();\r\n      dispatch({ type: 'LOGOUT' });\r\n    } catch (error) {\r\n      console.error('Error signing out:', error);\r\n      // Force logout even if Firebase signout fails\r\n      dispatch({ type: 'LOGOUT' });\r\n    }\r\n  };\r\n\r\n  const updateUser = (updatedUserData) => {\r\n    const newUserData = { ...state.user, ...updatedUserData };\r\n    dispatch({ type: 'LOGIN', payload: newUserData });\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    logout,\r\n    updateUser,\r\n    dispatch\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}