{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Beatrice\\\\Documents\\\\GitHub\\\\nail-polish-picker\\\\src\\\\components\\\\Combinations.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useData } from '../context/DataContext';\nimport { useModal } from '../context/ModalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Combinations = () => {\n  _s();\n  const {\n    usedCombinations,\n    dispatch\n  } = useData();\n  const {\n    confirm,\n    success\n  } = useModal();\n  const handleDeleteCombination = async id => {\n    const confirmed = await confirm('Are you sure you want to delete this combination?');\n    if (confirmed) {\n      dispatch({\n        type: 'REMOVE_COMBINATION',\n        payload: id\n      });\n      success('Combination deleted successfully!');\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString() + ' at ' + date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recent Combinations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), usedCombinations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"empty-message\",\n      children: \"No combinations yet! Use the Polish Picker to generate some combinations.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginBottom: '20px',\n          color: '#6c757d'\n        },\n        children: [\"You have \", usedCombinations.length, \" saved combination\", usedCombinations.length !== 1 ? 's' : '', \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), usedCombinations.sort((a, b) => new Date(b.date) - new Date(a.date)).map(combo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"combination-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combination-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"combination-polish\",\n            children: combo.polish.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"combination-date\",\n            children: formatDate(combo.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combination-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"brand\",\n            children: combo.polish.brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"color-tag\",\n            children: combo.polish.color\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"formula-tag\",\n            children: combo.polish.formula\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), combo.topper && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combination-topper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"topper-label\",\n            children: \"With Topper:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '5px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: combo.topper.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 23\n            }, this), \" by \", combo.topper.brand, /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"formula-tag\",\n              style: {\n                marginLeft: '10px'\n              },\n              children: combo.topper.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"combination-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDeleteCombination(combo.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, combo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Combinations, \"Yah0AGnlQ2I+9OH5ejdIW/+t2xk=\", false, function () {\n  return [useData, useModal];\n});\n_c = Combinations;\nexport default Combinations;\nvar _c;\n$RefreshReg$(_c, \"Combinations\");","map":{"version":3,"names":["React","useData","useModal","jsxDEV","_jsxDEV","Combinations","_s","usedCombinations","dispatch","confirm","success","handleDeleteCombination","id","confirmed","type","payload","formatDate","dateString","date","Date","toLocaleDateString","toLocaleTimeString","hour","minute","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","style","marginBottom","color","sort","a","b","map","combo","polish","name","brand","formula","topper","marginTop","marginLeft","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Beatrice/Documents/GitHub/nail-polish-picker/src/components/Combinations.js"],"sourcesContent":["import React from 'react';\r\nimport { useData } from '../context/DataContext';\r\nimport { useModal } from '../context/ModalContext';\r\n\r\nconst Combinations = () => {\r\n  const { usedCombinations, dispatch } = useData();\r\n  const { confirm, success } = useModal();\r\n\r\n  const handleDeleteCombination = async (id) => {\r\n    const confirmed = await confirm('Are you sure you want to delete this combination?');\r\n    if (confirmed) {\r\n      dispatch({ type: 'REMOVE_COMBINATION', payload: id });\r\n      success('Combination deleted successfully!');\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString() + ' at ' + date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Recent Combinations</h2>\r\n      \r\n      {usedCombinations.length === 0 ? (\r\n        <p className=\"empty-message\">\r\n          No combinations yet! Use the Polish Picker to generate some combinations.\r\n        </p>\r\n      ) : (\r\n        <div>\r\n          <p style={{ marginBottom: '20px', color: '#6c757d' }}>\r\n            You have {usedCombinations.length} saved combination{usedCombinations.length !== 1 ? 's' : ''}.\r\n          </p>\r\n          \r\n          {usedCombinations\r\n            .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n            .map((combo) => (\r\n              <div key={combo.id} className=\"combination-card\">\r\n                <div className=\"combination-header\">\r\n                  <h3 className=\"combination-polish\">{combo.polish.name}</h3>\r\n                  <span className=\"combination-date\">{formatDate(combo.date)}</span>\r\n                </div>\r\n                \r\n                <div className=\"combination-details\">\r\n                  <span className=\"brand\">{combo.polish.brand}</span>\r\n                  <span className=\"color-tag\">{combo.polish.color}</span>\r\n                  <span className=\"formula-tag\">{combo.polish.formula}</span>\r\n                </div>\r\n                \r\n                {combo.topper && (\r\n                  <div className=\"combination-topper\">\r\n                    <div className=\"topper-label\">With Topper:</div>\r\n                    <div style={{ marginTop: '5px' }}>\r\n                      <strong>{combo.topper.name}</strong> by {combo.topper.brand}\r\n                      <span className=\"formula-tag\" style={{ marginLeft: '10px' }}>\r\n                        {combo.topper.type}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                \r\n                <div className=\"combination-actions\">\r\n                  <button \r\n                    className=\"delete-button\" \r\n                    onClick={() => handleDeleteCombination(combo.id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Combinations;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}