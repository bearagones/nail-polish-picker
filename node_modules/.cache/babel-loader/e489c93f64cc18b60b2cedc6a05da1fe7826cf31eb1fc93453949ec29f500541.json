{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Beatrice\\\\Documents\\\\GitHub\\\\nail-polish-picker\\\\src\\\\components\\\\Collection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useData } from '../context/DataContext';\nimport { useModal } from '../context/ModalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Collection = () => {\n  _s();\n  const {\n    nailPolishes,\n    toppers,\n    getAllColors,\n    getAllFormulas,\n    getAllTopperTypes,\n    dispatch\n  } = useData();\n  const {\n    success,\n    confirm\n  } = useModal();\n  const [showAddPolish, setShowAddPolish] = useState(false);\n  const [showAddTopper, setShowAddTopper] = useState(false);\n  const [newPolish, setNewPolish] = useState({\n    name: '',\n    brand: '',\n    color: '',\n    formula: ''\n  });\n  const [newTopper, setNewTopper] = useState({\n    name: '',\n    brand: '',\n    type: ''\n  });\n  const handleAddPolish = e => {\n    e.preventDefault();\n    if (!newPolish.name || !newPolish.brand || !newPolish.color || !newPolish.formula) {\n      success('Please fill in all fields', 'Missing Information');\n      return;\n    }\n    dispatch({\n      type: 'ADD_POLISH',\n      payload: newPolish\n    });\n    setNewPolish({\n      name: '',\n      brand: '',\n      color: '',\n      formula: ''\n    });\n    setShowAddPolish(false);\n    success('Polish added successfully!');\n  };\n  const handleAddTopper = e => {\n    e.preventDefault();\n    if (!newTopper.name || !newTopper.brand || !newTopper.type) {\n      success('Please fill in all fields', 'Missing Information');\n      return;\n    }\n    dispatch({\n      type: 'ADD_TOPPER',\n      payload: newTopper\n    });\n    setNewTopper({\n      name: '',\n      brand: '',\n      type: ''\n    });\n    setShowAddTopper(false);\n    success('Topper added successfully!');\n  };\n  const handleDeletePolish = async polish => {\n    const confirmed = await confirm(`Are you sure you want to delete \"${polish.name}\" by ${polish.brand}?`);\n    if (confirmed) {\n      dispatch({\n        type: 'REMOVE_POLISH',\n        payload: polish\n      });\n      success('Polish deleted successfully!');\n    }\n  };\n  const handleDeleteTopper = async topper => {\n    const confirmed = await confirm(`Are you sure you want to delete \"${topper.name}\" by ${topper.brand}?`);\n    if (confirmed) {\n      dispatch({\n        type: 'REMOVE_TOPPER',\n        payload: topper\n      });\n      success('Topper deleted successfully!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: nailPolishes.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Nail Polishes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: toppers.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Toppers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collection-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"secondary-button\",\n        onClick: () => setShowAddPolish(!showAddPolish),\n        children: showAddPolish ? 'Cancel' : 'Add Polish'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"secondary-button\",\n        onClick: () => setShowAddTopper(!showAddTopper),\n        children: showAddTopper ? 'Cancel' : 'Add Topper'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), showAddPolish && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-polish-form\",\n      onSubmit: handleAddPolish,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Polish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newPolish.name,\n          onChange: e => setNewPolish(prev => ({\n            ...prev,\n            name: e.target.value\n          })),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Brand:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newPolish.brand,\n          onChange: e => setNewPolish(prev => ({\n            ...prev,\n            brand: e.target.value\n          })),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Color:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newPolish.color,\n          onChange: e => setNewPolish(prev => ({\n            ...prev,\n            color: e.target.value\n          })),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), getAllColors().map(color => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: color,\n            children: color.charAt(0).toUpperCase() + color.slice(1)\n          }, color, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"custom\",\n            children: \"+ Add Custom Color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), newPolish.color === 'custom' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter custom color name\",\n          onBlur: e => {\n            if (e.target.value.trim()) {\n              const customColor = e.target.value.toLowerCase().trim();\n              dispatch({\n                type: 'ADD_CUSTOM_COLOR',\n                payload: customColor\n              });\n              setNewPolish(prev => ({\n                ...prev,\n                color: customColor\n              }));\n            } else {\n              setNewPolish(prev => ({\n                ...prev,\n                color: ''\n              }));\n            }\n          },\n          style: {\n            marginTop: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Formula:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newPolish.formula,\n          onChange: e => setNewPolish(prev => ({\n            ...prev,\n            formula: e.target.value\n          })),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Formula\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), getAllFormulas().map(formula => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: formula,\n            children: formula.charAt(0).toUpperCase() + formula.slice(1)\n          }, formula, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"custom\",\n            children: \"+ Add Custom Formula\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), newPolish.formula === 'custom' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter custom formula name\",\n          onBlur: e => {\n            if (e.target.value.trim()) {\n              const customFormula = e.target.value.toLowerCase().trim();\n              dispatch({\n                type: 'ADD_CUSTOM_FORMULA',\n                payload: customFormula\n              });\n              setNewPolish(prev => ({\n                ...prev,\n                formula: customFormula\n              }));\n            } else {\n              setNewPolish(prev => ({\n                ...prev,\n                formula: ''\n              }));\n            }\n          },\n          style: {\n            marginTop: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-button\",\n          onClick: () => setShowAddPolish(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"save-button\",\n          children: \"Add Polish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), showAddTopper && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"add-topper-form\",\n      onSubmit: handleAddTopper,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add New Topper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTopper.name,\n          onChange: e => setNewTopper(prev => ({\n            ...prev,\n            name: e.target.value\n          })),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Brand:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newTopper.brand,\n          onChange: e => setNewTopper(prev => ({\n            ...prev,\n            brand: e.target.value\n          })),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: newTopper.type,\n          onChange: e => setNewTopper(prev => ({\n            ...prev,\n            type: e.target.value\n          })),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), getAllTopperTypes().map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: type,\n            children: type.charAt(0).toUpperCase() + type.slice(1)\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"custom\",\n            children: \"+ Add Custom Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), newTopper.type === 'custom' && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter custom topper type\",\n          onBlur: e => {\n            if (e.target.value.trim()) {\n              const customType = e.target.value.toLowerCase().trim();\n              dispatch({\n                type: 'ADD_CUSTOM_TOPPER_TYPE',\n                payload: customType\n              });\n              setNewTopper(prev => ({\n                ...prev,\n                type: customType\n              }));\n            } else {\n              setNewTopper(prev => ({\n                ...prev,\n                type: ''\n              }));\n            }\n          },\n          style: {\n            marginTop: '10px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-button\",\n          onClick: () => setShowAddTopper(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"save-button\",\n          children: \"Add Topper\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My Nail Polishes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), nailPolishes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-message\",\n        children: \"No polishes in your collection yet. Add some above!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"polish-list\",\n        children: nailPolishes.map((polish, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"polish-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: polish.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"polish-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"brand\",\n              children: polish.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"color-tag\",\n              children: polish.color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"formula-tag\",\n              children: polish.formula\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDeletePolish(polish),\n            style: {\n              marginTop: '10px'\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My Toppers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), toppers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"empty-message\",\n        children: \"No toppers in your collection yet. Add some above!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"topper-list\",\n        children: toppers.map((topper, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"topper-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: topper.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"topper-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"brand\",\n              children: topper.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"formula-tag\",\n              children: topper.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDeleteTopper(topper),\n            style: {\n              marginTop: '10px'\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Collection, \"pvaZzl3uCmjZmc8VL/C/+uQkNzI=\", false, function () {\n  return [useData, useModal];\n});\n_c = Collection;\nexport default Collection;\nvar _c;\n$RefreshReg$(_c, \"Collection\");","map":{"version":3,"names":["React","useState","useData","useModal","jsxDEV","_jsxDEV","Collection","_s","nailPolishes","toppers","getAllColors","getAllFormulas","getAllTopperTypes","dispatch","success","confirm","showAddPolish","setShowAddPolish","showAddTopper","setShowAddTopper","newPolish","setNewPolish","name","brand","color","formula","newTopper","setNewTopper","type","handleAddPolish","e","preventDefault","payload","handleAddTopper","handleDeletePolish","polish","confirmed","handleDeleteTopper","topper","children","className","length","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","value","onChange","prev","target","required","map","charAt","toUpperCase","slice","placeholder","onBlur","trim","customColor","toLowerCase","style","marginTop","customFormula","customType","index","_c","$RefreshReg$"],"sources":["C:/Users/Beatrice/Documents/GitHub/nail-polish-picker/src/components/Collection.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useData } from '../context/DataContext';\r\nimport { useModal } from '../context/ModalContext';\r\n\r\nconst Collection = () => {\r\n  const { nailPolishes, toppers, getAllColors, getAllFormulas, getAllTopperTypes, dispatch } = useData();\r\n  const { success, confirm } = useModal();\r\n  \r\n  const [showAddPolish, setShowAddPolish] = useState(false);\r\n  const [showAddTopper, setShowAddTopper] = useState(false);\r\n  const [newPolish, setNewPolish] = useState({ name: '', brand: '', color: '', formula: '' });\r\n  const [newTopper, setNewTopper] = useState({ name: '', brand: '', type: '' });\r\n\r\n  const handleAddPolish = (e) => {\r\n    e.preventDefault();\r\n    if (!newPolish.name || !newPolish.brand || !newPolish.color || !newPolish.formula) {\r\n      success('Please fill in all fields', 'Missing Information');\r\n      return;\r\n    }\r\n    \r\n    dispatch({ type: 'ADD_POLISH', payload: newPolish });\r\n    setNewPolish({ name: '', brand: '', color: '', formula: '' });\r\n    setShowAddPolish(false);\r\n    success('Polish added successfully!');\r\n  };\r\n\r\n  const handleAddTopper = (e) => {\r\n    e.preventDefault();\r\n    if (!newTopper.name || !newTopper.brand || !newTopper.type) {\r\n      success('Please fill in all fields', 'Missing Information');\r\n      return;\r\n    }\r\n    \r\n    dispatch({ type: 'ADD_TOPPER', payload: newTopper });\r\n    setNewTopper({ name: '', brand: '', type: '' });\r\n    setShowAddTopper(false);\r\n    success('Topper added successfully!');\r\n  };\r\n\r\n  const handleDeletePolish = async (polish) => {\r\n    const confirmed = await confirm(`Are you sure you want to delete \"${polish.name}\" by ${polish.brand}?`);\r\n    if (confirmed) {\r\n      dispatch({ type: 'REMOVE_POLISH', payload: polish });\r\n      success('Polish deleted successfully!');\r\n    }\r\n  };\r\n\r\n  const handleDeleteTopper = async (topper) => {\r\n    const confirmed = await confirm(`Are you sure you want to delete \"${topper.name}\" by ${topper.brand}?`);\r\n    if (confirmed) {\r\n      dispatch({ type: 'REMOVE_TOPPER', payload: topper });\r\n      success('Topper deleted successfully!');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"stats-overview\">\r\n        <div className=\"stat-card\">\r\n          <h3>{nailPolishes.length}</h3>\r\n          <p>Nail Polishes</p>\r\n        </div>\r\n        <div className=\"stat-card\">\r\n          <h3>{toppers.length}</h3>\r\n          <p>Toppers</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"collection-buttons\">\r\n        <button className=\"secondary-button\" onClick={() => setShowAddPolish(!showAddPolish)}>\r\n          {showAddPolish ? 'Cancel' : 'Add Polish'}\r\n        </button>\r\n        <button className=\"secondary-button\" onClick={() => setShowAddTopper(!showAddTopper)}>\r\n          {showAddTopper ? 'Cancel' : 'Add Topper'}\r\n        </button>\r\n      </div>\r\n\r\n      {showAddPolish && (\r\n        <form className=\"add-polish-form\" onSubmit={handleAddPolish}>\r\n          <h3>Add New Polish</h3>\r\n          <div className=\"form-group\">\r\n            <label>Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={newPolish.name}\r\n              onChange={(e) => setNewPolish(prev => ({ ...prev, name: e.target.value }))}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Brand:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={newPolish.brand}\r\n              onChange={(e) => setNewPolish(prev => ({ ...prev, brand: e.target.value }))}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Color:</label>\r\n            <select\r\n              value={newPolish.color}\r\n              onChange={(e) => setNewPolish(prev => ({ ...prev, color: e.target.value }))}\r\n              required\r\n            >\r\n              <option value=\"\">Select Color</option>\r\n              {getAllColors().map(color => (\r\n                <option key={color} value={color}>\r\n                  {color.charAt(0).toUpperCase() + color.slice(1)}\r\n                </option>\r\n              ))}\r\n              <option value=\"custom\">+ Add Custom Color</option>\r\n            </select>\r\n            {newPolish.color === 'custom' && (\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter custom color name\"\r\n                onBlur={(e) => {\r\n                  if (e.target.value.trim()) {\r\n                    const customColor = e.target.value.toLowerCase().trim();\r\n                    dispatch({ type: 'ADD_CUSTOM_COLOR', payload: customColor });\r\n                    setNewPolish(prev => ({ ...prev, color: customColor }));\r\n                  } else {\r\n                    setNewPolish(prev => ({ ...prev, color: '' }));\r\n                  }\r\n                }}\r\n                style={{ marginTop: '10px' }}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Formula:</label>\r\n            <select\r\n              value={newPolish.formula}\r\n              onChange={(e) => setNewPolish(prev => ({ ...prev, formula: e.target.value }))}\r\n              required\r\n            >\r\n              <option value=\"\">Select Formula</option>\r\n              {getAllFormulas().map(formula => (\r\n                <option key={formula} value={formula}>\r\n                  {formula.charAt(0).toUpperCase() + formula.slice(1)}\r\n                </option>\r\n              ))}\r\n              <option value=\"custom\">+ Add Custom Formula</option>\r\n            </select>\r\n            {newPolish.formula === 'custom' && (\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter custom formula name\"\r\n                onBlur={(e) => {\r\n                  if (e.target.value.trim()) {\r\n                    const customFormula = e.target.value.toLowerCase().trim();\r\n                    dispatch({ type: 'ADD_CUSTOM_FORMULA', payload: customFormula });\r\n                    setNewPolish(prev => ({ ...prev, formula: customFormula }));\r\n                  } else {\r\n                    setNewPolish(prev => ({ ...prev, formula: '' }));\r\n                  }\r\n                }}\r\n                style={{ marginTop: '10px' }}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"form-buttons\">\r\n            <button type=\"button\" className=\"cancel-button\" onClick={() => setShowAddPolish(false)}>\r\n              Cancel\r\n            </button>\r\n            <button type=\"submit\" className=\"save-button\">\r\n              Add Polish\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n\r\n      {showAddTopper && (\r\n        <form className=\"add-topper-form\" onSubmit={handleAddTopper}>\r\n          <h3>Add New Topper</h3>\r\n          <div className=\"form-group\">\r\n            <label>Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={newTopper.name}\r\n              onChange={(e) => setNewTopper(prev => ({ ...prev, name: e.target.value }))}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Brand:</label>\r\n            <input\r\n              type=\"text\"\r\n              value={newTopper.brand}\r\n              onChange={(e) => setNewTopper(prev => ({ ...prev, brand: e.target.value }))}\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Type:</label>\r\n            <select\r\n              value={newTopper.type}\r\n              onChange={(e) => setNewTopper(prev => ({ ...prev, type: e.target.value }))}\r\n              required\r\n            >\r\n              <option value=\"\">Select Type</option>\r\n              {getAllTopperTypes().map(type => (\r\n                <option key={type} value={type}>\r\n                  {type.charAt(0).toUpperCase() + type.slice(1)}\r\n                </option>\r\n              ))}\r\n              <option value=\"custom\">+ Add Custom Type</option>\r\n            </select>\r\n            {newTopper.type === 'custom' && (\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter custom topper type\"\r\n                onBlur={(e) => {\r\n                  if (e.target.value.trim()) {\r\n                    const customType = e.target.value.toLowerCase().trim();\r\n                    dispatch({ type: 'ADD_CUSTOM_TOPPER_TYPE', payload: customType });\r\n                    setNewTopper(prev => ({ ...prev, type: customType }));\r\n                  } else {\r\n                    setNewTopper(prev => ({ ...prev, type: '' }));\r\n                  }\r\n                }}\r\n                style={{ marginTop: '10px' }}\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"form-buttons\">\r\n            <button type=\"button\" className=\"cancel-button\" onClick={() => setShowAddTopper(false)}>\r\n              Cancel\r\n            </button>\r\n            <button type=\"submit\" className=\"save-button\">\r\n              Add Topper\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n\r\n      <div>\r\n        <h3>My Nail Polishes</h3>\r\n        {nailPolishes.length === 0 ? (\r\n          <p className=\"empty-message\">No polishes in your collection yet. Add some above!</p>\r\n        ) : (\r\n          <div className=\"polish-list\">\r\n            {nailPolishes.map((polish, index) => (\r\n              <div key={index} className=\"polish-item\">\r\n                <h4>{polish.name}</h4>\r\n                <div className=\"polish-details\">\r\n                  <span className=\"brand\">{polish.brand}</span>\r\n                  <span className=\"color-tag\">{polish.color}</span>\r\n                  <span className=\"formula-tag\">{polish.formula}</span>\r\n                </div>\r\n                <button \r\n                  className=\"delete-button\" \r\n                  onClick={() => handleDeletePolish(polish)}\r\n                  style={{ marginTop: '10px' }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div style={{ marginTop: '30px' }}>\r\n        <h3>My Toppers</h3>\r\n        {toppers.length === 0 ? (\r\n          <p className=\"empty-message\">No toppers in your collection yet. Add some above!</p>\r\n        ) : (\r\n          <div className=\"topper-list\">\r\n            {toppers.map((topper, index) => (\r\n              <div key={index} className=\"topper-item\">\r\n                <h4>{topper.name}</h4>\r\n                <div className=\"topper-details\">\r\n                  <span className=\"brand\">{topper.brand}</span>\r\n                  <span className=\"formula-tag\">{topper.type}</span>\r\n                </div>\r\n                <button \r\n                  className=\"delete-button\" \r\n                  onClick={() => handleDeleteTopper(topper)}\r\n                  style={{ marginTop: '10px' }}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Collection;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,wBAAwB;AAChD,SAASC,QAAQ,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,YAAY;IAAEC,OAAO;IAAEC,YAAY;IAAEC,cAAc;IAAEC,iBAAiB;IAAEC;EAAS,CAAC,GAAGX,OAAO,CAAC,CAAC;EACtG,MAAM;IAAEY,OAAO;IAAEC;EAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAEvC,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC;IAAEqB,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,OAAO,EAAE;EAAG,CAAC,CAAC;EAC3F,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC;IAAEqB,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEK,IAAI,EAAE;EAAG,CAAC,CAAC;EAE7E,MAAMC,eAAe,GAAIC,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACX,SAAS,CAACE,IAAI,IAAI,CAACF,SAAS,CAACG,KAAK,IAAI,CAACH,SAAS,CAACI,KAAK,IAAI,CAACJ,SAAS,CAACK,OAAO,EAAE;MACjFX,OAAO,CAAC,2BAA2B,EAAE,qBAAqB,CAAC;MAC3D;IACF;IAEAD,QAAQ,CAAC;MAAEe,IAAI,EAAE,YAAY;MAAEI,OAAO,EAAEZ;IAAU,CAAC,CAAC;IACpDC,YAAY,CAAC;MAAEC,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAC,CAAC;IAC7DR,gBAAgB,CAAC,KAAK,CAAC;IACvBH,OAAO,CAAC,4BAA4B,CAAC;EACvC,CAAC;EAED,MAAMmB,eAAe,GAAIH,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACL,SAAS,CAACJ,IAAI,IAAI,CAACI,SAAS,CAACH,KAAK,IAAI,CAACG,SAAS,CAACE,IAAI,EAAE;MAC1Dd,OAAO,CAAC,2BAA2B,EAAE,qBAAqB,CAAC;MAC3D;IACF;IAEAD,QAAQ,CAAC;MAAEe,IAAI,EAAE,YAAY;MAAEI,OAAO,EAAEN;IAAU,CAAC,CAAC;IACpDC,YAAY,CAAC;MAAEL,IAAI,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEK,IAAI,EAAE;IAAG,CAAC,CAAC;IAC/CT,gBAAgB,CAAC,KAAK,CAAC;IACvBL,OAAO,CAAC,4BAA4B,CAAC;EACvC,CAAC;EAED,MAAMoB,kBAAkB,GAAG,MAAOC,MAAM,IAAK;IAC3C,MAAMC,SAAS,GAAG,MAAMrB,OAAO,CAAC,oCAAoCoB,MAAM,CAACb,IAAI,QAAQa,MAAM,CAACZ,KAAK,GAAG,CAAC;IACvG,IAAIa,SAAS,EAAE;MACbvB,QAAQ,CAAC;QAAEe,IAAI,EAAE,eAAe;QAAEI,OAAO,EAAEG;MAAO,CAAC,CAAC;MACpDrB,OAAO,CAAC,8BAA8B,CAAC;IACzC;EACF,CAAC;EAED,MAAMuB,kBAAkB,GAAG,MAAOC,MAAM,IAAK;IAC3C,MAAMF,SAAS,GAAG,MAAMrB,OAAO,CAAC,oCAAoCuB,MAAM,CAAChB,IAAI,QAAQgB,MAAM,CAACf,KAAK,GAAG,CAAC;IACvG,IAAIa,SAAS,EAAE;MACbvB,QAAQ,CAAC;QAAEe,IAAI,EAAE,eAAe;QAAEI,OAAO,EAAEM;MAAO,CAAC,CAAC;MACpDxB,OAAO,CAAC,8BAA8B,CAAC;IACzC;EACF,CAAC;EAED,oBACET,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAKmC,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC7BlC,OAAA;QAAKmC,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACxBlC,OAAA;UAAAkC,QAAA,EAAK/B,YAAY,CAACiC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9BxC,OAAA;UAAAkC,QAAA,EAAG;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eACNxC,OAAA;QAAKmC,SAAS,EAAC,WAAW;QAAAD,QAAA,gBACxBlC,OAAA;UAAAkC,QAAA,EAAK9B,OAAO,CAACgC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzBxC,OAAA;UAAAkC,QAAA,EAAG;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAENxC,OAAA;MAAKmC,SAAS,EAAC,oBAAoB;MAAAD,QAAA,gBACjClC,OAAA;QAAQmC,SAAS,EAAC,kBAAkB;QAACM,OAAO,EAAEA,CAAA,KAAM7B,gBAAgB,CAAC,CAACD,aAAa,CAAE;QAAAuB,QAAA,EAClFvB,aAAa,GAAG,QAAQ,GAAG;MAAY;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACTxC,OAAA;QAAQmC,SAAS,EAAC,kBAAkB;QAACM,OAAO,EAAEA,CAAA,KAAM3B,gBAAgB,CAAC,CAACD,aAAa,CAAE;QAAAqB,QAAA,EAClFrB,aAAa,GAAG,QAAQ,GAAG;MAAY;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAEL7B,aAAa,iBACZX,OAAA;MAAMmC,SAAS,EAAC,iBAAiB;MAACO,QAAQ,EAAElB,eAAgB;MAAAU,QAAA,gBAC1DlC,OAAA;QAAAkC,QAAA,EAAI;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBxC,OAAA;QAAKmC,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzBlC,OAAA;UAAAkC,QAAA,EAAO;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBxC,OAAA;UACEuB,IAAI,EAAC,MAAM;UACXoB,KAAK,EAAE5B,SAAS,CAACE,IAAK;UACtB2B,QAAQ,EAAGnB,CAAC,IAAKT,YAAY,CAAC6B,IAAI,KAAK;YAAE,GAAGA,IAAI;YAAE5B,IAAI,EAAEQ,CAAC,CAACqB,MAAM,CAACH;UAAM,CAAC,CAAC,CAAE;UAC3EI,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxC,OAAA;QAAKmC,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzBlC,OAAA;UAAAkC,QAAA,EAAO;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBxC,OAAA;UACEuB,IAAI,EAAC,MAAM;UACXoB,KAAK,EAAE5B,SAAS,CAACG,KAAM;UACvB0B,QAAQ,EAAGnB,CAAC,IAAKT,YAAY,CAAC6B,IAAI,KAAK;YAAE,GAAGA,IAAI;YAAE3B,KAAK,EAAEO,CAAC,CAACqB,MAAM,CAACH;UAAM,CAAC,CAAC,CAAE;UAC5EI,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxC,OAAA;QAAKmC,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzBlC,OAAA;UAAAkC,QAAA,EAAO;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBxC,OAAA;UACE2C,KAAK,EAAE5B,SAAS,CAACI,KAAM;UACvByB,QAAQ,EAAGnB,CAAC,IAAKT,YAAY,CAAC6B,IAAI,KAAK;YAAE,GAAGA,IAAI;YAAE1B,KAAK,EAAEM,CAAC,CAACqB,MAAM,CAACH;UAAM,CAAC,CAAC,CAAE;UAC5EI,QAAQ;UAAAb,QAAA,gBAERlC,OAAA;YAAQ2C,KAAK,EAAC,EAAE;YAAAT,QAAA,EAAC;UAAY;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACrCnC,YAAY,CAAC,CAAC,CAAC2C,GAAG,CAAC7B,KAAK,iBACvBnB,OAAA;YAAoB2C,KAAK,EAAExB,KAAM;YAAAe,QAAA,EAC9Bf,KAAK,CAAC8B,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG/B,KAAK,CAACgC,KAAK,CAAC,CAAC;UAAC,GADpChC,KAAK;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACT,CAAC,eACFxC,OAAA;YAAQ2C,KAAK,EAAC,QAAQ;YAAAT,QAAA,EAAC;UAAkB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,EACRzB,SAAS,CAACI,KAAK,KAAK,QAAQ,iBAC3BnB,OAAA;UACEuB,IAAI,EAAC,MAAM;UACX6B,WAAW,EAAC,yBAAyB;UACrCC,MAAM,EAAG5B,CAAC,IAAK;YACb,IAAIA,CAAC,CAACqB,MAAM,CAACH,KAAK,CAACW,IAAI,CAAC,CAAC,EAAE;cACzB,MAAMC,WAAW,GAAG9B,CAAC,CAACqB,MAAM,CAACH,KAAK,CAACa,WAAW,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC;cACvD9C,QAAQ,CAAC;gBAAEe,IAAI,EAAE,kBAAkB;gBAAEI,OAAO,EAAE4B;cAAY,CAAC,CAAC;cAC5DvC,YAAY,CAAC6B,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAE1B,KAAK,EAAEoC;cAAY,CAAC,CAAC,CAAC;YACzD,CAAC,MAAM;cACLvC,YAAY,CAAC6B,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAE1B,KAAK,EAAE;cAAG,CAAC,CAAC,CAAC;YAChD;UACF,CAAE;UACFsC,KAAK,EAAE;YAAEC,SAAS,EAAE;UAAO;QAAE;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNxC,OAAA;QAAKmC,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzBlC,OAAA;UAAAkC,QAAA,EAAO;QAAQ;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACvBxC,OAAA;UACE2C,KAAK,EAAE5B,SAAS,CAACK,OAAQ;UACzBwB,QAAQ,EAAGnB,CAAC,IAAKT,YAAY,CAAC6B,IAAI,KAAK;YAAE,GAAGA,IAAI;YAAEzB,OAAO,EAAEK,CAAC,CAACqB,MAAM,CAACH;UAAM,CAAC,CAAC,CAAE;UAC9EI,QAAQ;UAAAb,QAAA,gBAERlC,OAAA;YAAQ2C,KAAK,EAAC,EAAE;YAAAT,QAAA,EAAC;UAAc;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACvClC,cAAc,CAAC,CAAC,CAAC0C,GAAG,CAAC5B,OAAO,iBAC3BpB,OAAA;YAAsB2C,KAAK,EAAEvB,OAAQ;YAAAc,QAAA,EAClCd,OAAO,CAAC6B,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG9B,OAAO,CAAC+B,KAAK,CAAC,CAAC;UAAC,GADxC/B,OAAO;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEZ,CACT,CAAC,eACFxC,OAAA;YAAQ2C,KAAK,EAAC,QAAQ;YAAAT,QAAA,EAAC;UAAoB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,EACRzB,SAAS,CAACK,OAAO,KAAK,QAAQ,iBAC7BpB,OAAA;UACEuB,IAAI,EAAC,MAAM;UACX6B,WAAW,EAAC,2BAA2B;UACvCC,MAAM,EAAG5B,CAAC,IAAK;YACb,IAAIA,CAAC,CAACqB,MAAM,CAACH,KAAK,CAACW,IAAI,CAAC,CAAC,EAAE;cACzB,MAAMK,aAAa,GAAGlC,CAAC,CAACqB,MAAM,CAACH,KAAK,CAACa,WAAW,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC;cACzD9C,QAAQ,CAAC;gBAAEe,IAAI,EAAE,oBAAoB;gBAAEI,OAAO,EAAEgC;cAAc,CAAC,CAAC;cAChE3C,YAAY,CAAC6B,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAEzB,OAAO,EAAEuC;cAAc,CAAC,CAAC,CAAC;YAC7D,CAAC,MAAM;cACL3C,YAAY,CAAC6B,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAEzB,OAAO,EAAE;cAAG,CAAC,CAAC,CAAC;YAClD;UACF,CAAE;UACFqC,KAAK,EAAE;YAAEC,SAAS,EAAE;UAAO;QAAE;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNxC,OAAA;QAAKmC,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC3BlC,OAAA;UAAQuB,IAAI,EAAC,QAAQ;UAACY,SAAS,EAAC,eAAe;UAACM,OAAO,EAAEA,CAAA,KAAM7B,gBAAgB,CAAC,KAAK,CAAE;UAAAsB,QAAA,EAAC;QAExF;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxC,OAAA;UAAQuB,IAAI,EAAC,QAAQ;UAACY,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAC;QAE9C;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP,EAEA3B,aAAa,iBACZb,OAAA;MAAMmC,SAAS,EAAC,iBAAiB;MAACO,QAAQ,EAAEd,eAAgB;MAAAM,QAAA,gBAC1DlC,OAAA;QAAAkC,QAAA,EAAI;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBxC,OAAA;QAAKmC,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzBlC,OAAA;UAAAkC,QAAA,EAAO;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBxC,OAAA;UACEuB,IAAI,EAAC,MAAM;UACXoB,KAAK,EAAEtB,SAAS,CAACJ,IAAK;UACtB2B,QAAQ,EAAGnB,CAAC,IAAKH,YAAY,CAACuB,IAAI,KAAK;YAAE,GAAGA,IAAI;YAAE5B,IAAI,EAAEQ,CAAC,CAACqB,MAAM,CAACH;UAAM,CAAC,CAAC,CAAE;UAC3EI,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxC,OAAA;QAAKmC,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzBlC,OAAA;UAAAkC,QAAA,EAAO;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBxC,OAAA;UACEuB,IAAI,EAAC,MAAM;UACXoB,KAAK,EAAEtB,SAAS,CAACH,KAAM;UACvB0B,QAAQ,EAAGnB,CAAC,IAAKH,YAAY,CAACuB,IAAI,KAAK;YAAE,GAAGA,IAAI;YAAE3B,KAAK,EAAEO,CAAC,CAACqB,MAAM,CAACH;UAAM,CAAC,CAAC,CAAE;UAC5EI,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNxC,OAAA;QAAKmC,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzBlC,OAAA;UAAAkC,QAAA,EAAO;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBxC,OAAA;UACE2C,KAAK,EAAEtB,SAAS,CAACE,IAAK;UACtBqB,QAAQ,EAAGnB,CAAC,IAAKH,YAAY,CAACuB,IAAI,KAAK;YAAE,GAAGA,IAAI;YAAEtB,IAAI,EAAEE,CAAC,CAACqB,MAAM,CAACH;UAAM,CAAC,CAAC,CAAE;UAC3EI,QAAQ;UAAAb,QAAA,gBAERlC,OAAA;YAAQ2C,KAAK,EAAC,EAAE;YAAAT,QAAA,EAAC;UAAW;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACpCjC,iBAAiB,CAAC,CAAC,CAACyC,GAAG,CAACzB,IAAI,iBAC3BvB,OAAA;YAAmB2C,KAAK,EAAEpB,IAAK;YAAAW,QAAA,EAC5BX,IAAI,CAAC0B,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAG3B,IAAI,CAAC4B,KAAK,CAAC,CAAC;UAAC,GADlC5B,IAAI;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAET,CACT,CAAC,eACFxC,OAAA;YAAQ2C,KAAK,EAAC,QAAQ;YAAAT,QAAA,EAAC;UAAiB;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C,CAAC,EACRnB,SAAS,CAACE,IAAI,KAAK,QAAQ,iBAC1BvB,OAAA;UACEuB,IAAI,EAAC,MAAM;UACX6B,WAAW,EAAC,0BAA0B;UACtCC,MAAM,EAAG5B,CAAC,IAAK;YACb,IAAIA,CAAC,CAACqB,MAAM,CAACH,KAAK,CAACW,IAAI,CAAC,CAAC,EAAE;cACzB,MAAMM,UAAU,GAAGnC,CAAC,CAACqB,MAAM,CAACH,KAAK,CAACa,WAAW,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC;cACtD9C,QAAQ,CAAC;gBAAEe,IAAI,EAAE,wBAAwB;gBAAEI,OAAO,EAAEiC;cAAW,CAAC,CAAC;cACjEtC,YAAY,CAACuB,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAEtB,IAAI,EAAEqC;cAAW,CAAC,CAAC,CAAC;YACvD,CAAC,MAAM;cACLtC,YAAY,CAACuB,IAAI,KAAK;gBAAE,GAAGA,IAAI;gBAAEtB,IAAI,EAAE;cAAG,CAAC,CAAC,CAAC;YAC/C;UACF,CAAE;UACFkC,KAAK,EAAE;YAAEC,SAAS,EAAE;UAAO;QAAE;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNxC,OAAA;QAAKmC,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAC3BlC,OAAA;UAAQuB,IAAI,EAAC,QAAQ;UAACY,SAAS,EAAC,eAAe;UAACM,OAAO,EAAEA,CAAA,KAAM3B,gBAAgB,CAAC,KAAK,CAAE;UAAAoB,QAAA,EAAC;QAExF;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxC,OAAA;UAAQuB,IAAI,EAAC,QAAQ;UAACY,SAAS,EAAC,aAAa;UAAAD,QAAA,EAAC;QAE9C;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP,eAEDxC,OAAA;MAAAkC,QAAA,gBACElC,OAAA;QAAAkC,QAAA,EAAI;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACxBrC,YAAY,CAACiC,MAAM,KAAK,CAAC,gBACxBpC,OAAA;QAAGmC,SAAS,EAAC,eAAe;QAAAD,QAAA,EAAC;MAAmD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEpFxC,OAAA;QAAKmC,SAAS,EAAC,aAAa;QAAAD,QAAA,EACzB/B,YAAY,CAAC6C,GAAG,CAAC,CAAClB,MAAM,EAAE+B,KAAK,kBAC9B7D,OAAA;UAAiBmC,SAAS,EAAC,aAAa;UAAAD,QAAA,gBACtClC,OAAA;YAAAkC,QAAA,EAAKJ,MAAM,CAACb;UAAI;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBxC,OAAA;YAAKmC,SAAS,EAAC,gBAAgB;YAAAD,QAAA,gBAC7BlC,OAAA;cAAMmC,SAAS,EAAC,OAAO;cAAAD,QAAA,EAAEJ,MAAM,CAACZ;YAAK;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7CxC,OAAA;cAAMmC,SAAS,EAAC,WAAW;cAAAD,QAAA,EAAEJ,MAAM,CAACX;YAAK;cAAAkB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACjDxC,OAAA;cAAMmC,SAAS,EAAC,aAAa;cAAAD,QAAA,EAAEJ,MAAM,CAACV;YAAO;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD,CAAC,eACNxC,OAAA;YACEmC,SAAS,EAAC,eAAe;YACzBM,OAAO,EAAEA,CAAA,KAAMZ,kBAAkB,CAACC,MAAM,CAAE;YAC1C2B,KAAK,EAAE;cAAEC,SAAS,EAAE;YAAO,CAAE;YAAAxB,QAAA,EAC9B;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAbDqB,KAAK;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENxC,OAAA;MAAKyD,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAxB,QAAA,gBAChClC,OAAA;QAAAkC,QAAA,EAAI;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClBpC,OAAO,CAACgC,MAAM,KAAK,CAAC,gBACnBpC,OAAA;QAAGmC,SAAS,EAAC,eAAe;QAAAD,QAAA,EAAC;MAAkD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEnFxC,OAAA;QAAKmC,SAAS,EAAC,aAAa;QAAAD,QAAA,EACzB9B,OAAO,CAAC4C,GAAG,CAAC,CAACf,MAAM,EAAE4B,KAAK,kBACzB7D,OAAA;UAAiBmC,SAAS,EAAC,aAAa;UAAAD,QAAA,gBACtClC,OAAA;YAAAkC,QAAA,EAAKD,MAAM,CAAChB;UAAI;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBxC,OAAA;YAAKmC,SAAS,EAAC,gBAAgB;YAAAD,QAAA,gBAC7BlC,OAAA;cAAMmC,SAAS,EAAC,OAAO;cAAAD,QAAA,EAAED,MAAM,CAACf;YAAK;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7CxC,OAAA;cAAMmC,SAAS,EAAC,aAAa;cAAAD,QAAA,EAAED,MAAM,CAACV;YAAI;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C,CAAC,eACNxC,OAAA;YACEmC,SAAS,EAAC,eAAe;YACzBM,OAAO,EAAEA,CAAA,KAAMT,kBAAkB,CAACC,MAAM,CAAE;YAC1CwB,KAAK,EAAE;cAAEC,SAAS,EAAE;YAAO,CAAE;YAAAxB,QAAA,EAC9B;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAZDqB,KAAK;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAaV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtC,EAAA,CA/RID,UAAU;EAAA,QAC+EJ,OAAO,EACvEC,QAAQ;AAAA;AAAAgE,EAAA,GAFjC7D,UAAU;AAiShB,eAAeA,UAAU;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}